@model DB_Realize_OnlineLibrary.Models.Review
@using System.Web

@{
    ViewData["Title"] = "Reviews";
}

<style>
    .book-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-bottom: 20px;
    }

    .book-item {
        width: calc(50% - 10px);
        min-width: 300px;
        margin-bottom: 20px;
        line-height: 1.4;
        border: 1px solid #ccc;
        padding: 20px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .book-name {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .book-details {
        flex-grow: 1;
    }

    .book-info p {
        margin-bottom: 10px;
    }

    .img-container {
        width: 100%;
        max-width: 368px;
        height: auto;
        border: 1px solid #ccc;
    }


    .rating polygon:hover {
        cursor: pointer;
        transition: 500ms;
    }

    .rating polygon:hover {
        fill: black;
    }

    .rating polygon {
        fill: lightgray;
    }

        .rating polygon.active {
            fill: gold;
        }


    .rating-cell {
        white-space: nowrap; /* Запрет переноса строк */
        width: 150px; /* Примерная ширина ячейки, можно изменить в зависимости от вашего макета */
    }
</style>

@{
    ViewData["Title"] = "Reviews";
}

<h1>Отзывы</h1>

<div>
    <hr />
    <div class="book-container">
        <div class="book-item">
            <div class="img-container">
                @if (!string.IsNullOrEmpty(ViewBag.book.ImageUrl))
                {
                    <img src="@Url.Content("~/images/")@ViewBag.book.ImageUrl" alt="@ViewBag.book.Name" class="card-img-top" />
                }
                else
                {
                    <img src="@Url.Content("~/images/")null_image.jpg" alt="@ViewBag.book.Name" class="card-img-top" />
                }
            </div>
            <div class="book-details">
                <p class="book-name">@ViewBag.Book.Name</p>
                <div class="book-info">
                    <p>
                        <strong>Рейтинг: </strong>
                        <span class="text-warning">
                            @{
                                var rating = ViewBag.TotalRating;
                                var fullStars = (int)rating;
                                var halfStar = rating - fullStars >= 0.5;
                                var emptyStars = 5 - fullStars - (halfStar ? 1 : 0);
                            }

                            @for (var i = 0; i < fullStars; i++)
                            {
                                <i class="bi bi-star-fill"></i>
                            }

                            @if (halfStar)
                            {
                                <i class="bi bi-star-half"></i>
                            }

                            @for (var i = 0; i < emptyStars; i++)
                            {
                                <i class="bi bi-star"></i>
                            }
                        </span>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div>
        @if (User.Identity.IsAuthenticated)
        {
            @if (ViewBag.CheckRead)
            {
                <h2>Напишите свой отзыв</h2>
                <br />
                <form asp-action="Add">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="BookId" type="hidden" value="@ViewBag.Book.Id" />
                    <div class="form-group">
                        <label asp-for="Text" class="control-label"></label>
                        <input asp-for="Text" id="textReview" class="form-control" />
                        <span asp-validation-for="Text" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Rating" class="control-label"></label>
                        <input asp-for="Rating" type="hidden" id="ratingValue" />
                        <span class="rating" data-value="5"></span>
                        <span asp-validation-for="Rating" class="text-danger"></span>
                    </div>
                    <br />
                    <input type="submit" value="Отправить" class="btn btn-primary" />
                </form>
            }
            else
            {
                <h1>Вы можете оставить отзыв только после прочтения книги</h1>
            }
        }
        else
        {
            <h1>Авторизируйтесь, чтобы написать свой отзыв</h1>
        }

    </div>
    <hr />
    <div>
        <h2>Отзывы других пользователей</h2>
        <br />
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Имя пользователя</th>
                        <th>Дата отзыва</th>
                        <th>Текст</th>
                        <th>Оценка</th>
                        @if (User.IsInRole("Admin"))
                        {
                            <th></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var review in ViewBag.Reviews)
                    {
                        <tr>
                            <td>@review.UserName</td>
                            <td>@review.DatePosted</td>
                            <td class="text-wrap">@review.Text</td>
                            <td class="rating-cell">
                                <span class="text-warning">
                                    @{
                                        rating = review.Rating;
                                        fullStars = (int)rating;
                                        halfStar = rating - fullStars >= 0.5;
                                        emptyStars = 5 - fullStars - (halfStar ? 1 : 0);
                                    }

                                    @for (var i = 0; i < fullStars; i++)
                                    {
                                        <i class="bi bi-star-fill"></i>
                                    }

                                    @if (halfStar)
                                    {
                                        <i class="bi bi-star-half"></i>
                                    }

                                    @for (var i = 0; i < emptyStars; i++)
                                    {
                                        <i class="bi bi-star"></i>
                                    }
                                </span>
                            </td>
                            @if (User.IsInRole("Admin"))
                            {
                                <td><a asp-action="Delete" asp-route-id="@review.Id">@HttpUtility.HtmlDecode("&#10060;")</a></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


</div>
<div>
    <a asp-controller="Home" asp-action="Index" class="btn btn-info">Вернуться</a>
</div>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css" rel="stylesheet">

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var ratingSpan = document.querySelector(".rating");
        var ratingValueInput = document.getElementById("ratingValue");
        var reviewTextInput = document.getElementById("textReview");
        var submitButton = document.querySelector("input[type='submit']");
        ratingSpan.addEventListener("click", function () {
            var value = this.getAttribute("data-value");
            ratingValueInput.value = value;
        });

        checkSubmitButtonState();
        function checkSubmitButtonState() {
            var text = reviewTextInput.value.trim();
            if (text === "") {
                submitButton.disabled = true;
            }
            else {
                submitButton.disabled = false;
            }
        }
        reviewTextInput.addEventListener("input", checkSubmitButtonState);
    });
    class Rating {
        constructor(dom) {
            dom.innerHTML = '<svg width="110" height="20"></svg>';
            this.svg = dom.querySelector('svg');
            for (var i = 0; i < 5; i++)
                this.svg.innerHTML += `<polygon data-value="${i + 1}"
                       transform="translate(${i * 22},0)"
                       points="10,1 4,19.8 19,7.8 1,7.8 16,19.8">`;
            this.svg.onclick = e => this.change(e);
            this.render();
        }
        change(e) {
            let value = e.target.dataset.value;
            value && (this.svg.parentNode.dataset.value = value);
            this.render();
        }
        render() {
            this.svg.querySelectorAll('polygon').forEach(star => {
                let on = +this.svg.parentNode.dataset.value >= +star.dataset.value;
                star.classList.toggle('active', on);
            });
        }
    }
    document.querySelectorAll('.rating').forEach(dom => new Rating(dom));
</script>

